
@page "/contacts"
@inject NavigationManager NavigationManager
@inject HttpClient Http



<h3>Contacts</h3>

<SfSpinner @bind-Visible="@VisibleProperty" Label="Loading...."/>

<SfGrid DataSource="GridData" AllowFiltering="true" Toolbar="@(new List<string>() {"Search"})">
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
    <GridColumns>
        <GridColumn Width="60">
            <Template>
                @{
                    var contact = context as Contact;
                    <SfButton CssClass="e-inherit" IconCss="e-icons e-edit"
                              OnClick="@(() => EditContact(contact!.Id))"></SfButton>
                }
            </Template>
        </GridColumn>
        <GridColumn Width="60">
            <Template>
                @{
                    var contact = context as Contact;
                    <SfButton CssClass="e-inherit" IconCss="e-icons e-delete"
                              OnClick="@(() => DeleteContact(contact!))"></SfButton>
                }
            </Template>
        </GridColumn>
            <GridColumn Field="FirstName" HeaderText="First Name" ></GridColumn> 
            <GridColumn Field="LastName" HeaderText="Last Name"></GridColumn>
            <GridColumn Field="NickName" HeaderText="Nick Name"></GridColumn>
            <GridColumn Field="Place" HeaderText="Place"></GridColumn>
            <GridColumn Field="DateOfBirth" HeaderText="Date Of Birth" Format="yyyy-MM-dd"></GridColumn>
    </GridColumns>
</SfGrid>

<p>
    <SfButton IsPrimary=true Content="Create New Contact" OnClick="(() =>CreateContact())" />
</p>


<SfDialog Width="335px" IsModal="true" @bind-Visible="ShowDeleteDialog">
    <DialogTemplates>
        <Header>Are you sure?</Header>
        <Content>
            <p>Do you really want to delete @ContactToDelete!.NickName?</p>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Yes" IsPrimary="false" OnClick="ConfirmDeleteContact"></DialogButton>
        <DialogButton Content="No" IsPrimary="true" OnClick="CancelDeleteContact"></DialogButton>
    </DialogButtons>
    <DialogAnimationSettings Effect="@DialogEffect.Zoom"></DialogAnimationSettings>
</SfDialog>



@code {

    public List<Contact> GridData { get; set; } = new List<Contact>();

    private bool VisibleProperty { get; set; } = true;

    private bool ShowDeleteDialog = false;

    Contact ContactToDelete;


    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<Contact>>("api/contacts");

        if(result is not null)
        {
            GridData = result;
            VisibleProperty = false;
        }
    }

    void EditContact(int id)
    {
        NavigationManager.NavigateTo($"contacts/edit/{id}");
    }

    void CreateContact()
    {
        NavigationManager.NavigateTo("/contacts/new");
    }

    void DeleteContact(Contact c)
    {
        ContactToDelete = c;
        ShowDeleteDialog = true;
    }

    void CancelDeleteContact()
    {
        ShowDeleteDialog = false;
    }

    async Task ConfirmDeleteContact()
    {
        if (ContactToDelete is null)
        {
            return;
        }

        ShowDeleteDialog = false;
        var result = await Http.DeleteAsync($"api/contacts/{ContactToDelete.Id}");
        if (result.IsSuccessStatusCode)
        {
            var jsonResult = await result.Content.ReadFromJsonAsync<List<Contact>>();
            if (jsonResult is not null)
            {
                GridData = jsonResult;
            }
        }
    }
}

